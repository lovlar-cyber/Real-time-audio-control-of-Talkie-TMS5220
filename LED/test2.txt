const byte numChars = 32;
char receivedChars[numChars]; // an array to store the received data
int mouth, energy;
boolean newData = false;

void setup()
{
    Serial.begin(9600);
    Serial.println("<Arduino is ready>");
}

void loop()
{
    recvWithEndMarker();
    parseData();
    delay(10);
}

void recvWithEndMarker()
{
    static byte ndx = 0;
    char endMarker = '\n';
    char rc;

    // if (Serial.available() > 0) {
    while (Serial.available() > 0 && newData == false)
    {
        rc = Serial.read();

        if (rc != endMarker)
        {
            receivedChars[ndx] = rc;
            ndx++;
            if (ndx >= numChars)
            {
                ndx = numChars - 1;
            }
        }
        else
        {
            receivedChars[ndx] = '\0'; // terminate the string
            ndx = 0;
            newData = true;
        }
    }
}
void parseData()
{

    // split the data into its parts

    char *strtokIndx; // this is used by strtok() as an index

    strtokIndx = strtok(receivedChars, ","); // get the first part - the string
    //strcpy(messageFromPC, strtokIndx);       // copy it to messageFromPC

    strtokIndx = strtok(NULL, ","); // this continues where the previous call left off
    mouth = atoi(strtokIndx);       // convert this part to an integer

    strtokIndx = strtok(NULL, ",");
    energy = atoi(strtokIndx); // convert this part to a float
}

void showNewData()
{
    if (newData == true)
    {
        Serial.print("This just in ... ");
        Serial.println(receivedChars);
        newData = false;
    }
}
