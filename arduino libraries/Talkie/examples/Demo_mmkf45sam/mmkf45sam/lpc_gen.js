var hex = "0xa9,0x28,0x2e,0x64,0x68,0x26,0xaf,0xb2,0x26,0xf3,0xa4,0xae,0x73,0x8a,0x1a,0xdc,0x4a,0x62,0xf6,0xc9,0xba,0x6b,0x2a,0x93,0xc5,0xa9,0x28,0xc2,0x71,0x39,0x26,0xa7,0xc2,0x1b,0x15,0x73,0x73,0x32,0x92,0x29,0x03,0x32,0x2b,0xce,0x8a,0x86,0x0b,0xa8,0xaa,0xca,0x27,0x6c,0x41,0x78,0x62,0xa3,0x9c,0xa8,0x27,0xd1,0x8a,0x8e,0x7b,0xe2,0xee,0x95,0x27,0xa6,0xca,0x49,0x86,0x0f,0xaa,0xa8,0xc5,0x2b,0x1b,0xde,0x29,0xab,0x16,0xaf,0x72,0xc4,0x24,0xab,0xac,0xbd,0xea,0x9e,0x84,0xb2,0xaa,0xec,0x68,0x87,0x54,0xb2,0xab,0x2a,0x69,0xe8,0x9a,0x34,0x67,0x2b,0x85,0xb1,0x70,0xaa,0xcc,0x74,0x12,0xc6,0xa4,0x2c,0x9d,0xc3,0xab,0x1b,0x93,0xd1,0x70,0x8e,0x34,0x61,0x2c,0x92,0x5b,0x43,0xbd,0x84,0x21,0x69,0x4d,0x0b,0x77,0xf5,0x80,0x2e,0xc3,0xae,0xc8,0xa9,0xca,0xcb,0x7a,0x04,0x00,0x00,0x00,0x00";
var ooa8 = "0x2b,0xc9,0x21,0xcd,0x2c,0x1f,0xee,0xe4,0xa4,0xc5,0x54,0x9a,0xe9,0xa6,0x9b,0xae,0x2c,0xbb,0x4a,0x55,0xdb,0xb4,0xb3,0x95,0xa7,0xd4,0x2e,0xea,0xab,0x67";
//var hex2=hex.replace(/,/gi,"");
var ex = "27,18,c5,58,33,a7,3e,00,00";
ex = ex.split(",");
ex = addzerox(ex)
hex = splitComma(hex);
bin = str2bin(hex);
revbin = rev(bin);
framevect = bin2lpc(0, revbin);
res = presKs(framevect);

console.log(res);

function rev(a) {
    var rest = a;
    res = "";
    for (var n = 0; n < a.length; n = n + 8) {
        var eight = parseInt(rest.substring(0, 8), 2);
        var reveight = rev8(eight).toString(2);
        revres = "00000000".substr(reveight.length) + reveight;
        res = res.concat(revres);
        rest = rest.substring(8);
    }
    return res;
}

function rev8(a) {
    // 76543210
    a = (a >> 4) | (a << 4); // Swap in groups of 4
    // 32107654
    a = ((a & 0xcc) >> 2) | ((a & 0x33) << 2); // Swap in groups of 2
    // 10325476
    a = ((a & 0xaa) >> 1) | ((a & 0x55) << 1); // Swap bit pairs
    // 01234567
    return a;
}

function spacebin(bin) {
    var rest = bin;
    res = "";
    for (var n = 0; n < bin.length; n++) {
        var eight = rest.substring(0, 8);
        res = res.concat(eight + " ");
        rest = rest.substring(8);
    }
    return res;
}
function presKs(vect) {
    var res = ("\n\nvar Ks=[");

    for (var i = 0; i < vect.length; i++) {
        if (typeof vect[i] != "string") {
            res = res.concat(
                "[" + vect[i].K1 +
                ", " + vect[i].K2 +
                ", " + vect[i].K3 +
                ", " + vect[i].K4 +
                ", " + vect[i].K5 +
                ", " + vect[i].K6 +
                ", " + vect[i].K7 +
                ", " + vect[i].K8 +
                ", " + vect[i].K9 +
                ", " + vect[i].K10 + "]"
            );
            if ((i)<=vect.length){
                res=res.concat(",")
            }else{
                res=res.concat("}\n")

            }
        } else {
            res = res.concat("\nREST: ");
            res = res.concat(spacebin(vect[i]));

        }
    }
return res;
}
function presentation(vect) {
    var res = ("FRM\tRMS\tREP\tPITCH\tK1 K2 K3 K4 K5 K6 K7 K8 K9 K10");

    for (var i = 0; i < vect.length; i++) {
        if (typeof vect[i] != "string") {
            res = res.concat(
                "\n" + (i + 1) +
                "\t" + vect[i].energy +
                "\t" + vect[i].repeat +
                "\t" + vect[i].pitch +
                "\t" + vect[i].K1 +
                ", " + vect[i].K2 +
                ", " + vect[i].K3 +
                ", " + vect[i].K4 +
                ", " + vect[i].K5 +
                ", " + vect[i].K6 +
                ", " + vect[i].K7 +
                ", " + vect[i].K8 +
                ", " + vect[i].K9 +
                ", " + vect[i].K10
            );
        } else {
            res = res.concat("\nREST: ");
            res = res.concat(spacebin(vect[i]));

        }


    }
    return res;
}

function fifty2lpc(binstr) {
    var obj = {
        energy: parseInt(binstr.substring(0, 4), 2),
        repeat: parseInt(binstr.substring(4, 5), 2),
        pitch: parseInt(binstr.substring(5, 11), 2),
        K1: parseInt(binstr.substring(11, 16), 2),
        K2: parseInt(binstr.substring(16, 21), 2),
        K3: parseInt(binstr.substring(21, 25), 2),
        K4: parseInt(binstr.substring(25, 29), 2),
        K5: parseInt(binstr.substring(29, 33), 2),
        K6: parseInt(binstr.substring(33, 37), 2),
        K7: parseInt(binstr.substring(37, 41), 2),
        K8: parseInt(binstr.substring(41, 44), 2),
        K9: parseInt(binstr.substring(44, 47), 2),
        K10: parseInt(binstr.substring(47, 50), 2)

    }
    return obj
}

function bin2lpc(diff, binstr) {
    var length = 50;
    var rest = binstr;
    rest = rest.substring(diff);
    var res = "";
    var vect = [];
    while (rest.length >= length) {
        var temp = rest.substring(0, length)
        rest = rest.substring(length)
        var tmpobj = fifty2lpc(temp);

        res = res.concat("\n\n" + JSON.stringify(tmpobj));
        vect.push(tmpobj);
    }
    vect.push(rest);
    res = res.concat("\n" + rest);

    return vect;
}

function splitComma(inex) {
    if ((typeof inex) == "string") {
        return inex.split(",");

    }
}

function str2bin(hex) {
    var n;
    var binstr = "";
    for (var i = 0; i < hex.length; i++) {
        n = parseInt(hex[i], 16).toString(2);
        binstr = binstr.concat("00000000".substr(n.length) + n);
        binstr = binstr.concat("")
    }
    return binstr;
}

function addzerox(hex) {
    var n;
    var binstr = "";
    for (var i = 0; i < hex.length; i++) {

        binstr = binstr.concat("0x" + hex[i] + ", ")
    }
    return binstr;
}

/*
0x27,0x18,0xc5,0x58,0x33,0xa7,0x9e,0xa0,0x6a,0xf1,0xad,0x9e,0xf2
0x27,0x18,0xc5,0x58,0x33,0xa7,0x9e,0xa0,0x6a,0xf1,0xad,0x9e,0xff,0x00,0x00,0x00
0x27,0x18,0xc5,0x58,0x33,0xa7,0x9e,0xa0,0x6a,0xf1,0xad,0x9e,0xff
0x27,0x18,0xc5,0x58,0x33,0xa7,0x9e,0xa0,0x6a,0xf1,0xad,0x9e,0xf2,0x00,0x00,0x00


cd,ab,30,c3,02,3f,05,4f,85,12,d3,3a,1d,3c,c7,2f,d4,f5,a5,f3,a4,5d,73,89,c7,ce,f3,62,3c,59,5e,5b,cf,7b,de,f3,9e,f7,bc,e7,3d,ef,79,cf,77,9e,f7,a3,c7,bd,ea,5f,3f,7b,da,37,9e,f7
11001101 10101011 00110000 11000011 00000010 00111111 00000101 01001111 10000101 00010010 11010011 00111010 00011101 00111100 11000111 00101111 11010100 11110101 10100101 11110011 10100100 01011101 01110011 10001001 11000111 11001110 11110011 01100010 00111100 01011001 01011110 01011011 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11100111 00111101 11101111 01111001 11001111 01110111 10011110 11110111 10100011 11000111 10111101 11101010 01011111 00111111 01111011 11011010 00110111 10011110 11110111
cd,ab,30,c3,02,3f,05,4f,85,12,d3,3a,1d,3c,c7,2f,d4,f5,a5,f3,a4,5d,73,89,c7,ce,f3,62,3c,59,5e,5b,cf,7b,de,f3,9e,f7,bc,e7,3d,ef,79,cf,7b,9e,f7,a3,c7,bd,ea,5f,3f,7b,da,37,9e,f7
11001101 10101011 00110000 11000011 00000010 00111111 00000101 01001111 10000101 00010010 11010011 00111010 00011101 00111100 11000111 00101111 11010100 11110101 10100101 11110011 10100100 01011101 01110011 10001001 11000111 11001110 11110011 01100010 00111100 01011001 01011110 01011011 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11100111 00111101 11101111 01111001 11001111 01111011 10011110 11110111 10100011 11000111 10111101 11101010 01011111 00111111 01111011 11011010 00110111 10011110 11110111
cd,ab,30,c3,02,3f,05,4f,85,12,d3,3a,1d,3c,c7,2f,d4,f5,a5,f3,a4,5d,73,89,c7,ce,f3,62,3c,59,5e,5b,cf,7b,de,f3,9e,f7,bc,e7,3d,ef,79,cf,7b,de,f3,a3,c7,bd,ea,5f,3f,7b,da,37,9e,f7
11001101 10101011 00110000 11000011 00000010 00111111 00000101 01001111 10000101 00010010 11010011 00111010 00011101 00111100 11000111 00101111 11010100 11110101 10100101 11110011 10100100 01011101 01110011 10001001 11000111 11001110 11110011 01100010 00111100 01011001 01011110 01011011 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11100111 00111101 11101111 01111001 11001111 01111011 11011110 11110011 10100011 11000111 10111101 11101010 01011111 00111111 01111011 11011010 00110111 10011110 11110111
cd,ab,30,c3,02,3f,05,4f,85,12,d3,3a,1d,3c,c7,2f,d4,f5,a5,f3,a4,5d,73,89,c7,ce,f3,62,3c,59,5e,5b,cf,7b,de,f3,9e,f7,bc,e7,3d,ef,79,cf,7b,de,f3,9e,c7,bd,ea,5f,3f,7b,da,37,9e,f7
11001101 10101011 00110000 11000011 00000010 00111111 00000101 01001111 10000101 00010010 11010011 00111010 00011101 00111100 11000111 00101111 11010100 11110101 10100101 11110011 10100100 01011101 01110011 10001001 11000111 11001110 11110011 01100010 00111100 01011001 01011110 01011011 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11100111 00111101 11101111 01111001 11001111 01111011 11011110 11110011 10011110 11000111 10111101 11101010 01011111 00111111 01111011 11011010 00110111 10011110 11110111
cd,ab,30,c3,02,3f,05,4f,85,12,d3,3a,1d,3c,c7,2f,d4,f5,a5,f3,a4,5d,73,89,c7,ce,f3,62,3c,59,5e,5b,cf,7b,de,f3,9e,f7,bc,e7,3d,ef,79,cf,7b,de,f3,9e,f7,bc,ea,5f,3f,7b,da,37,9e,f7
11001101 10101011 00110000 11000011 00000010 00111111 00000101 01001111 10000101 00010010 11010011 00111010 00011101 00111100 11000111 00101111 11010100 11110101 10100101 11110011 10100100 01011101 01110011 10001001 11000111 11001110 11110011 01100010 00111100 01011001 01011110 01011011 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11100111 00111101 11101111 01111001 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11101010 01011111 00111111 01111011 11011010 00110111 10011110 11110111
cd,ab,30,c3,02,3f,05,4f,85,12,d3,3a,1d,3c,c7,2f,d4,f5,a5,f3,a4,5d,73,89,c7,ce,f3,62,3c,59,5e,5b,cf,7b,de,f3,9e,f7,bc,e7,3d,ef,79,cf,7b,de,f3,9e,f7,bc,ea,5f,3f,7b,da,37,9e

cd,ab,30,c3,02,3f,05,4f,85,12,d3,3a,1d,3c,c7,2f,d4,f5,a5,f3,a4,5d,73,89,c7,ce,f3,62,3c,59,5e,5b,cf,7b,de,f3,9e,f7,bc,e7,3d,ef,79,cf,7b,de,f3,9e,f7,bc,ea,5f,3f,7b,da,37
11001101 10101011 00110000 11000011 00000010 00111111 00000101 01001111 10000101 00010010 11010011 00111010 00011101 00111100 11000111 00101111 11010100 11110101 10100101 11110011 10100100 01011101 01110011 10001001 11000111 11001110 11110011 01100010 00111100 01011001 01011110 01011011 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11100111 00111101 11101111 01111001 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11101010 01011111 00111111 01111011 11011010 00110111
cd,ab,30,c3,02,3f,05,4f,85,12,d3,3a,1d,3c,c7,2f,d4,f5,a5,f3,a4,5d,73,89,c7,ce,f3,62,3c,59,5e,5b,cf,7b,de,f3,9e,f7,bc,e7,3d,ef,79,cf,7b,de,f3,9e,f7,bc,ea,5f,3f,7b
11001101 10101011 00110000 11000011 00000010 00111111 00000101 01001111 10000101 00010010 11010011 00111010 00011101 00111100 11000111 00101111 11010100 11110101 10100101 11110011 10100100 01011101 01110011 10001001 11000111 11001110 11110011 01100010 00111100 01011001 01011110 01011011 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11100111 00111101 11101111 01111001 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11101010 01011111 00111111 01111011
cd,ab,30,c3,02,3f,05,4f,85,12,d3,3a,1d,3c,c7,2f,d4,f5,a5,f3,a4,5d,73,89,c7,ce,f3,62,3c,59,5e,5b,cf,7b,de,f3,9e,f7,bc,e7,3d,ef,79,cf,7b,de,f3,9e,f7,bc,ea,5f,3f
11001101 10101011 00110000 11000011 00000010 00111111 00000101 01001111 10000101 00010010 11010011 00111010 00011101 00111100 11000111 00101111 11010100 11110101 10100101 11110011 10100100 01011101 01110011 10001001 11000111 11001110 11110011 01100010 00111100 01011001 01011110 01011011 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11100111 00111101 11101111 01111001 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11101010 01011111 00111111
cd,ab,30,c3,02,3f,05,4f,85,12,d3,3a,1d,3c,c7,2f,d4,f5,a5,f3,a4,5d,73,89,c7,ce,f3,62,3c,59,5e,5b,cf,7b,de,f3,9e,f7,bc,e7,3d,ef,79,cf,7b,de,f3,9e,f7,bc,ea
11001101 10101011 00110000 11000011 00000010 00111111 00000101 01001111 10000101 00010010 11010011 00111010 00011101 00111100 11000111 00101111 11010100 11110101 10100101 11110011 10100100 01011101 01110011 10001001 11000111 11001110 11110011 01100010 00111100 01011001 01011110 01011011 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11100111 00111101 11101111 01111001 11001111 01111011 11011110 11110011 10011110 11110111 10111100 11101010

*/